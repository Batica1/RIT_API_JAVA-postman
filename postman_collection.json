{
	"info": {
		"_postman_id": "44a1a22a-cad3-4544-af35-ca9d7e121308",
		"name": "KurfurstDomagojP2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23911579"
	},
	"item": [
		{
			"name": "Company",
			"item": [
				{
					"name": "Delete Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Successful delete\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"success\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_path}}/company?company={{studentID}}",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"company"
							],
							"query": [
								{
									"key": "company",
									"value": "{{studentID}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Departments",
			"item": [
				{
					"name": "Departments - ALL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"All departments successfully returned\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"dept_id\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_path}}/departments?company={{studentID}}",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"departments"
							],
							"query": [
								{
									"key": "company",
									"value": "{{studentID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Department",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response included 'Error'. Could not get department with dept_id 0\", function () {\r",
									"    pm.expect(pm.response.text().toLowerCase()).to.include(\"error\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_path}}/department?company={{studentID}}&dept_id=1",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"department"
							],
							"query": [
								{
									"key": "company",
									"value": "{{studentID}}"
								},
								{
									"key": "dept_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Department",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Successful Initial Insert\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"dept_id\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "company",
									"value": "{{studentID}}",
									"type": "text"
								},
								{
									"key": "dept_name",
									"value": "mystery",
									"type": "text"
								},
								{
									"key": "dept_no",
									"value": "{{studentID}}-bdfT",
									"type": "text"
								},
								{
									"key": "location",
									"value": "RIT",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_path}}/department",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"department"
							]
						}
					},
					"response": []
				},
				{
					"name": "Department - ERROR",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Bad department was not inserted, dept_no already exists.\", function () {\r",
									"    pm.expect(pm.response.text().toLowerCase()).to.include(\"error\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "company",
									"value": "{{studentID}}",
									"type": "text"
								},
								{
									"key": "dept_name",
									"value": "mystery",
									"type": "text"
								},
								{
									"key": "dept_no",
									"value": "{{studentID}}-bdfT",
									"type": "text"
								},
								{
									"key": "location",
									"value": "RIT",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_path}}/department",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"department"
							]
						}
					},
					"response": []
				},
				{
					"name": "Department",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has updated department names\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"NEW NAME\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"dept_id\": {{good_insert_dept_id}},\r\n    \"company\": \"{{studentID}}\",\r\n    \"dept_name\":\"NEW NAME\",\r\n    \"dept_no\": \"{{studentID}}-bdfNew\",\r\n    \"location\": \"Maine\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_path}}/department",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"department"
							]
						}
					},
					"response": []
				},
				{
					"name": "Department - ERROR 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Response contained 'error'. Could not update non-existent department \", function () {\r",
									"    pm.expect(pm.response.text().toLowerCase()).to.include(\"error\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"company\": \"{{studentID}}\",\r\n    \"dept_id\":0,\r\n    \"dept_name\":\"NEW NAME\",\r\n    \"dept_no\": \"{{studentID}}-bdfnew\",\r\n    \"location\": \"Maine\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_path}}/department",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"department"
							]
						}
					},
					"response": []
				},
				{
					"name": "Department - ERROR 2",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"company\": \"{{studentID}}\",\r\n    \"dept_id\": {{good_insert_dept_id}},\r\n    \"dept_name\":\"NEW NAME\",\r\n    \"dept_no\": \"{{studentID}}-bdfnew\",\r\n    \"location\": \"Maine\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_path}}/department",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"department"
							]
						}
					},
					"response": []
				},
				{
					"name": "Department",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Successful Delete\", function () {\r",
									"    pm.expect(pm.response.text().toLowerCase()).to.include(\"success\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_path}}/department?company={{studentID}}&dept_id={{good_delete_dept_id}}",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"department"
							],
							"query": [
								{
									"key": "company",
									"value": "{{studentID}}"
								},
								{
									"key": "dept_id",
									"value": "{{good_delete_dept_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Department - ERROR",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// pm.test(\"Status code is 200\", function () {\r",
									"//     pm.response.to.have.status(200);\r",
									"// });\r",
									"pm.test(\"Response Includes 'error'. Could Not Delete Non-Existent Department\", function () {\r",
									"    pm.expect(pm.response.text().toLowerCase()).to.include(\"error\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_path}}/department?company={{studentID}}&dept_id=0",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"department"
							],
							"query": [
								{
									"key": "company",
									"value": "{{studentID}}"
								},
								{
									"key": "dept_id",
									"value": "0"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Employees",
			"item": [
				{
					"name": "Employees - ALL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"All employees successfully returned\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"emp_id\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_path}}/employees?company={{studentID}}",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"employees"
							],
							"query": [
								{
									"key": "company",
									"value": "{{studentID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Employee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Successful Retrieval of Employee\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"emp_id\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_path}}/employee?company={{studentID}}&emp_id={{good_insert_emp_id}}",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"employee"
							],
							"query": [
								{
									"key": "company",
									"value": "{{studentID}}"
								},
								{
									"key": "emp_id",
									"value": "{{good_insert_emp_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Employee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Successful Insert\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"emp_id\");\r",
									"});\r",
									"var json = JSON.parse(responseBody);\r",
									"console.log(json)\r",
									"pm.collectionVariables.set(\"good_insert_emp_id\", json.emp_id || json.success.emp_id || 0);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "company",
									"value": "{{studentID}}",
									"type": "text"
								},
								{
									"key": "emp_name",
									"value": "Domagoj Kurfurst",
									"type": "text"
								},
								{
									"key": "emp_no",
									"value": "{{studentID}}-4368",
									"type": "text"
								},
								{
									"key": "hire_date",
									"value": "{{lastMonday}}",
									"type": "text"
								},
								{
									"key": "job",
									"value": "wmc",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "5000.0",
									"type": "text"
								},
								{
									"key": "dept_id",
									"value": "{{good_insert_dept_id}}",
									"type": "text"
								},
								{
									"key": "mng_id",
									"value": "{{good_insert_manager_id}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_path}}/employee",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"employee"
							]
						}
					},
					"response": []
				},
				{
					"name": "Employee ERROR 8",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Successful Insert\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"emp_id\");\r",
									"});\r",
									"var json = JSON.parse(responseBody);\r",
									"console.log(json)\r",
									"pm.collectionVariables.set(\"good_insert_emp_id\", json.emp_id || json.success.emp_id || 0);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "company",
									"value": "{{studentID}}",
									"type": "text"
								},
								{
									"key": "emp_name",
									"value": "Domagoj Kurfurst",
									"type": "text"
								},
								{
									"key": "emp_no",
									"value": "{{studentID}}-4368",
									"type": "text"
								},
								{
									"key": "hire_date",
									"value": "{{lastMonday}}",
									"type": "text"
								},
								{
									"key": "job",
									"value": "wmc",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "5000.0",
									"type": "text"
								},
								{
									"key": "dept_id",
									"value": "{{good_insert_dept_id}}",
									"type": "text"
								},
								{
									"key": "mng_id",
									"value": "{{good_insert_manager_id}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_path}}/employee",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"employee"
							]
						}
					},
					"response": []
				},
				{
					"name": "Employee - ERROR 1",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "company",
									"value": "{{studentID}}",
									"type": "text"
								},
								{
									"key": "emp_name",
									"value": "Domagoj Kurfurst",
									"type": "text"
								},
								{
									"key": "emp_no",
									"value": "{{studentID}}-4368",
									"type": "text"
								},
								{
									"key": "hire_date",
									"value": "{{lastMonday}}",
									"type": "text"
								},
								{
									"key": "job",
									"value": "wmc",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "5000.0",
									"type": "text"
								},
								{
									"key": "dept_id",
									"value": "1000",
									"type": "text"
								},
								{
									"key": "mng_id",
									"value": "{{good_insert_manager_id}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_path}}/employee",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"employee"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Employee - ERROR 2",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "company",
									"value": "{{studentID}}",
									"type": "text"
								},
								{
									"key": "emp_name",
									"value": "Domagoj Kurfurst",
									"type": "text"
								},
								{
									"key": "emp_no",
									"value": "{{studentID}}-4368",
									"type": "text"
								},
								{
									"key": "hire_date",
									"value": "{{lastMonday}}",
									"type": "text"
								},
								{
									"key": "job",
									"value": "wmc",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "5000.0",
									"type": "text"
								},
								{
									"key": "dept_id",
									"value": "{{good_insert_dept_id}}",
									"type": "text"
								},
								{
									"key": "mng_id",
									"value": "1000000",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_path}}/employee",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"employee"
							]
						}
					},
					"response": []
				},
				{
					"name": "Employee - ERROR 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Successful Insert\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"emp_id\");\r",
									"});\r",
									"var json = JSON.parse(responseBody);\r",
									"console.log(json)\r",
									"pm.collectionVariables.set(\"good_insert_emp_id\", json.emp_id || json.success.emp_id || 0);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "company",
									"value": "{{studentID}}",
									"type": "text"
								},
								{
									"key": "emp_name",
									"value": "Domagoj Kurfurst",
									"type": "text"
								},
								{
									"key": "emp_no",
									"value": "{{studentID}}-4368",
									"type": "text"
								},
								{
									"key": "hire_date",
									"value": "2027-10-27",
									"type": "text"
								},
								{
									"key": "job",
									"value": "wmc",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "5000.0",
									"type": "text"
								},
								{
									"key": "dept_id",
									"value": "{{good_insert_dept_id}}",
									"type": "text"
								},
								{
									"key": "mng_id",
									"value": "{{good_insert_manager_id}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_path}}/employee",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"employee"
							]
						}
					},
					"response": []
				},
				{
					"name": "Employee- ERROR 4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Successful Insert\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"emp_id\");\r",
									"});\r",
									"var json = JSON.parse(responseBody);\r",
									"console.log(json)\r",
									"pm.collectionVariables.set(\"good_insert_emp_id\", json.emp_id || json.success.emp_id || 0);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "company",
									"value": "{{studentID}}",
									"type": "text"
								},
								{
									"key": "emp_name",
									"value": "Domagoj Kurfurst",
									"type": "text"
								},
								{
									"key": "emp_no",
									"value": "{{studentID}}-4368",
									"type": "text"
								},
								{
									"key": "hire_date",
									"value": "2022-10-15",
									"type": "text"
								},
								{
									"key": "job",
									"value": "wmc",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "5000.0",
									"type": "text"
								},
								{
									"key": "dept_id",
									"value": "{{good_insert_dept_id}}",
									"type": "text"
								},
								{
									"key": "mng_id",
									"value": "{{good_insert_manager_id}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_path}}/employee",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"employee"
							]
						}
					},
					"response": []
				},
				{
					"name": "Employee- ERROR 5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Successful Insert\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"emp_id\");\r",
									"});\r",
									"var json = JSON.parse(responseBody);\r",
									"console.log(json)\r",
									"pm.collectionVariables.set(\"good_insert_emp_id\", json.emp_id || json.success.emp_id || 0);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "company",
									"value": "{{studentID}}",
									"type": "text"
								},
								{
									"key": "emp_name",
									"value": "Domagoj Kurfurst",
									"type": "text"
								},
								{
									"key": "emp_no",
									"value": "{{studentID}}-4368",
									"type": "text"
								},
								{
									"key": "hire_date",
									"value": "{{lastMonday}}",
									"type": "text"
								},
								{
									"key": "job",
									"value": "wmc",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "5000.0",
									"type": "text"
								},
								{
									"key": "dept_id",
									"value": "{{good_insert_dept_id}}",
									"type": "text"
								},
								{
									"key": "mng_id",
									"value": "{{good_insert_manager_id}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_path}}/employee",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"employee"
							]
						}
					},
					"response": []
				},
				{
					"name": "Employee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has updated employee information\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"bdftest\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"company\": \"{{studentID}}\",\r\n    \"emp_id\":{{good_insert_emp_id}},\r\n    \"emp_name\":\"french\",\r\n    \"emp_no\": \"{{studentID}}-a\",\r\n    \"hire_date\": \"{{lastMonday}}\",\r\n    \"job\": \"new job\",\r\n    \"salary\": 60000.0,\r\n    \"dept_id\": {{good_insert_dept_id}},\r\n    \"mng_id\": {{good_insert_manager_id}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_path}}/employee",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"employee"
							]
						}
					},
					"response": []
				},
				{
					"name": "Employee - ERROR 6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has updated employee information\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"bdftest\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"company\": \"{{studentID}}\",\r\n    \"emp_id\":{{good_insert_emp_id}},\r\n    \"emp_name\":\"french\",\r\n    \"emp_no\": \"{{studentID}}-a\",\r\n    \"hire_date\": \"{{lastMonday}}\",\r\n    \"job\": \"new job\",\r\n    \"salary\": 60000.0,\r\n    \"dept_id\": {{good_insert_dept_id}},\r\n    \"mng_id\": {{good_insert_manager_id}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_path}}/employee",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"employee"
							]
						}
					},
					"response": []
				},
				{
					"name": "Employee -ERROR 5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has updated employee information\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"bdftest\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"company\": \"{{studentID}}\",\r\n    \"emp_id\":{{good_insert_emp_id}},\r\n    \"emp_name\":\"french\",\r\n    \"emp_no\": \"{{studentID}}-a\",\r\n    \"hire_date\": \"2022-10-15\",\r\n    \"job\": \"new job\",\r\n    \"salary\": 60000.0,\r\n    \"dept_id\": {{good_insert_dept_id}},\r\n    \"mng_id\": {{good_insert_manager_id}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_path}}/employee",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"employee"
							]
						}
					},
					"response": []
				},
				{
					"name": "Employee - ERROR 4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has updated employee information\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"bdftest\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"company\": \"{{studentID}}\",\r\n    \"emp_id\":{{good_insert_emp_id}},\r\n    \"emp_name\":\"french\",\r\n    \"emp_no\": \"{{studentID}}-a\",\r\n    \"hire_date\": \"2030-10-27\",\r\n    \"job\": \"new job\",\r\n    \"salary\": 60000.0,\r\n    \"dept_id\": {{good_insert_dept_id}},\r\n    \"mng_id\": {{good_insert_manager_id}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_path}}/employee",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"employee"
							]
						}
					},
					"response": []
				},
				{
					"name": "Employee - ERROR 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has updated employee information\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"bdftest\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"company\": \"{{studentID}}\",\r\n    \"emp_id\":{{good_insert_emp_id}},\r\n    \"emp_name\":\"french\",\r\n    \"emp_no\": \"{{studentID}}-a\",\r\n    \"hire_date\": \"{{lastMonday}}\",\r\n    \"job\": \"new job\",\r\n    \"salary\": 60000.0,\r\n    \"dept_id\": {{good_insert_dept_id}},\r\n    \"mng_id\": 9999999\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_path}}/employee",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"employee"
							]
						}
					},
					"response": []
				},
				{
					"name": "Employee - ERROR 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has updated employee information\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"bdftest\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"company\": \"{{studentID}}\",\r\n    \"emp_id\":{{good_insert_emp_id}},\r\n    \"emp_name\":\"french\",\r\n    \"emp_no\": \"{{studentID}}-a\",\r\n    \"hire_date\": \"{{lastMonday}}\",\r\n    \"job\": \"new job\",\r\n    \"salary\": 60000.0,\r\n    \"dept_id\": 10000000,\r\n    \"mng_id\": {{good_insert_manager_id}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_path}}/employee",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"employee"
							]
						}
					},
					"response": []
				},
				{
					"name": "Employee- ERROR 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has updated employee information\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"bdftest\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"company\": \"{{studentID}}\",\r\n    \"emp_id\":0,\r\n    \"emp_name\":\"french\",\r\n    \"emp_no\": \"{{studentID}}-a\",\r\n    \"hire_date\": \"{{lastMonday}}\",\r\n    \"job\": \"new job\",\r\n    \"salary\": 60000.0,\r\n    \"dept_id\": {{good_insert_dept_id}},\r\n    \"mng_id\": {{good_insert_manager_id}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_path}}/employee",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"employee"
							]
						}
					},
					"response": []
				},
				{
					"name": "Employee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Successful Delete\", function () {\r",
									"    pm.expect(pm.response.text().toLowerCase()).to.include(\"success\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_path}}/employee?company={{studentID}}&emp_id={{good_delete_emp_id}}",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"employee"
							],
							"query": [
								{
									"key": "company",
									"value": "{{studentID}}"
								},
								{
									"key": "emp_id",
									"value": "{{good_delete_emp_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Employee- ERROR",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Successful Delete\", function () {\r",
									"    pm.expect(pm.response.text().toLowerCase()).to.include(\"success\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_path}}/employee?company={{studentID}}&emp_id=99999999",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"employee"
							],
							"query": [
								{
									"key": "company",
									"value": "{{studentID}}"
								},
								{
									"key": "emp_id",
									"value": "99999999"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Timecards",
			"item": [
				{
					"name": "Timecards - ALL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"All timecards successfully returned\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"timecard_id\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_path}}/timecards?company={{studentID}}&emp_id={{good_insert_emp_id}}",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"timecards"
							],
							"query": [
								{
									"key": "company",
									"value": "{{studentID}}"
								},
								{
									"key": "emp_id",
									"value": "{{good_insert_emp_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Timecard",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Successful Retrieval of Timecard\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"timecard_id\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_path}}/timecard?company={{studentID}}&timecard_id={{good_insert_timecard_id}}",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"timecard"
							],
							"query": [
								{
									"key": "company",
									"value": "{{studentID}}"
								},
								{
									"key": "timecard_id",
									"value": "{{good_insert_timecard_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Timecard",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful timecard insert\", function () {\r",
									"    pm.expect(pm.response.text().toLowerCase()).to.include(\"timecard_id\");\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var json = JSON.parse(responseBody);\r",
									"console.log(json)\r",
									"pm.collectionVariables.set(\"good_insert_timecard_id\", json.timecard_id || json.success.timecard_id || 0);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"dateStr\", pm.collectionVariables.get(\"lastMonday\") + \" 08:00:00\")\r",
									"pm.collectionVariables.set(\"dateStr2\", pm.collectionVariables.get(\"lastMonday\") + \" 17:00:00\")\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "company",
									"value": "{{studentID}}",
									"type": "text"
								},
								{
									"key": "emp_id",
									"value": "{{good_insert_emp_id}}",
									"type": "text"
								},
								{
									"key": "start_time",
									"value": "2022-10-27 06:00:00",
									"type": "text"
								},
								{
									"key": "end_time",
									"value": "2022-10-27 18:00:00",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_path}}/timecard",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"timecard"
							]
						}
					},
					"response": []
				},
				{
					"name": "Timecard - ERROR 6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful timecard insert\", function () {\r",
									"    pm.expect(pm.response.text().toLowerCase()).to.include(\"timecard_id\");\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var json = JSON.parse(responseBody);\r",
									"console.log(json)\r",
									"pm.collectionVariables.set(\"good_insert_timecard_id\", json.timecard_id || json.success.timecard_id || 0);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"dateStr\", pm.collectionVariables.get(\"lastMonday\") + \" 08:00:00\")\r",
									"pm.collectionVariables.set(\"dateStr2\", pm.collectionVariables.get(\"lastMonday\") + \" 17:00:00\")\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "company",
									"value": "{{studentID}}",
									"type": "text"
								},
								{
									"key": "emp_id",
									"value": "{{good_insert_emp_id}}",
									"type": "text"
								},
								{
									"key": "start_time",
									"value": "2022-10-27 03:00:00",
									"type": "text"
								},
								{
									"key": "end_time",
									"value": "2022-10-27 16:00:00",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_path}}/timecard",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"timecard"
							]
						}
					},
					"response": []
				},
				{
					"name": "Timecard - ERROR 7",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful timecard insert\", function () {\r",
									"    pm.expect(pm.response.text().toLowerCase()).to.include(\"timecard_id\");\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var json = JSON.parse(responseBody);\r",
									"console.log(json)\r",
									"pm.collectionVariables.set(\"good_insert_timecard_id\", json.timecard_id || json.success.timecard_id || 0);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"dateStr\", pm.collectionVariables.get(\"lastMonday\") + \" 08:00:00\")\r",
									"pm.collectionVariables.set(\"dateStr2\", pm.collectionVariables.get(\"lastMonday\") + \" 17:00:00\")\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "company",
									"value": "{{studentID}}",
									"type": "text"
								},
								{
									"key": "emp_id",
									"value": "{{good_insert_emp_id}}",
									"type": "text"
								},
								{
									"key": "start_time",
									"value": "2022-10-27 08:00:00",
									"type": "text"
								},
								{
									"key": "end_time",
									"value": "2022-10-27 22:00:00",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_path}}/timecard",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"timecard"
							]
						}
					},
					"response": []
				},
				{
					"name": "Timecard - ERROR 4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful timecard insert\", function () {\r",
									"    pm.expect(pm.response.text().toLowerCase()).to.include(\"timecard_id\");\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var json = JSON.parse(responseBody);\r",
									"console.log(json)\r",
									"pm.collectionVariables.set(\"good_insert_timecard_id\", json.timecard_id || json.success.timecard_id || 0);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"dateStr\", pm.collectionVariables.get(\"lastMonday\") + \" 08:00:00\")\r",
									"pm.collectionVariables.set(\"dateStr2\", pm.collectionVariables.get(\"lastMonday\") + \" 17:00:00\")\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "company",
									"value": "{{studentID}}",
									"type": "text"
								},
								{
									"key": "emp_id",
									"value": "{{good_insert_emp_id}}",
									"type": "text"
								},
								{
									"key": "start_time",
									"value": "2022-10-29 08:00:00",
									"type": "text"
								},
								{
									"key": "end_time",
									"value": "2022-10-29 16:00:00",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_path}}/timecard",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"timecard"
							]
						}
					},
					"response": []
				},
				{
					"name": "Timecard - ERROR 5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful timecard insert\", function () {\r",
									"    pm.expect(pm.response.text().toLowerCase()).to.include(\"timecard_id\");\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var json = JSON.parse(responseBody);\r",
									"console.log(json)\r",
									"pm.collectionVariables.set(\"good_insert_timecard_id\", json.timecard_id || json.success.timecard_id || 0);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"dateStr\", pm.collectionVariables.get(\"lastMonday\") + \" 08:00:00\")\r",
									"pm.collectionVariables.set(\"dateStr2\", pm.collectionVariables.get(\"lastMonday\") + \" 17:00:00\")\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "company",
									"value": "{{studentID}}",
									"type": "text"
								},
								{
									"key": "emp_id",
									"value": "{{good_insert_emp_id}}",
									"type": "text"
								},
								{
									"key": "start_time",
									"value": "2022-11-03 08:00:00",
									"type": "text"
								},
								{
									"key": "end_time",
									"value": "2022-11-05 08:00:00",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_path}}/timecard",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"timecard"
							]
						}
					},
					"response": []
				},
				{
					"name": "Timecard - ERROR 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful timecard insert\", function () {\r",
									"    pm.expect(pm.response.text().toLowerCase()).to.include(\"timecard_id\");\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var json = JSON.parse(responseBody);\r",
									"console.log(json)\r",
									"pm.collectionVariables.set(\"good_insert_timecard_id\", json.timecard_id || json.success.timecard_id || 0);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"dateStr\", pm.collectionVariables.get(\"lastMonday\") + \" 08:00:00\")\r",
									"pm.collectionVariables.set(\"dateStr2\", pm.collectionVariables.get(\"lastMonday\") + \" 17:00:00\")\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "company",
									"value": "{{studentID}}",
									"type": "text"
								},
								{
									"key": "emp_id",
									"value": "{{good_insert_emp_id}}",
									"type": "text"
								},
								{
									"key": "start_time",
									"value": "2021-10-27 00:00:00",
									"type": "text"
								},
								{
									"key": "end_time",
									"value": "2022-10-27 16:00:00",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_path}}/timecard",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"timecard"
							]
						}
					},
					"response": []
				},
				{
					"name": "Timecard - ERROR 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful timecard insert\", function () {\r",
									"    pm.expect(pm.response.text().toLowerCase()).to.include(\"timecard_id\");\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var json = JSON.parse(responseBody);\r",
									"console.log(json)\r",
									"pm.collectionVariables.set(\"good_insert_timecard_id\", json.timecard_id || json.success.timecard_id || 0);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"dateStr\", pm.collectionVariables.get(\"lastMonday\") + \" 08:00:00\")\r",
									"pm.collectionVariables.set(\"dateStr2\", pm.collectionVariables.get(\"lastMonday\") + \" 17:00:00\")\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "company",
									"value": "{{studentID}}",
									"type": "text"
								},
								{
									"key": "emp_id",
									"value": "{{good_insert_emp_id}}",
									"type": "text"
								},
								{
									"key": "start_time",
									"value": "2022-10-27 18:00:00",
									"type": "text"
								},
								{
									"key": "end_time",
									"value": "2022-10-27 16:00:00",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_path}}/timecard",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"timecard"
							]
						}
					},
					"response": []
				},
				{
					"name": "Timecard - ERROR 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful timecard insert\", function () {\r",
									"    pm.expect(pm.response.text().toLowerCase()).to.include(\"timecard_id\");\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var json = JSON.parse(responseBody);\r",
									"console.log(json)\r",
									"pm.collectionVariables.set(\"good_insert_timecard_id\", json.timecard_id || json.success.timecard_id || 0);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"dateStr\", pm.collectionVariables.get(\"lastMonday\") + \" 08:00:00\")\r",
									"pm.collectionVariables.set(\"dateStr2\", pm.collectionVariables.get(\"lastMonday\") + \" 17:00:00\")\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "company",
									"value": "{{studentID}}",
									"type": "text"
								},
								{
									"key": "emp_id",
									"value": "333",
									"type": "text"
								},
								{
									"key": "start_time",
									"value": "2022-10-27 08:00:00",
									"type": "text"
								},
								{
									"key": "end_time",
									"value": "2022-10-27 16:00:00",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_path}}/timecard",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"timecard"
							]
						}
					},
					"response": []
				},
				{
					"name": "Timecard",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Successful Timecard Update, It contains the updated information\", function () {\r",
									"    pm.expect(pm.response.text().toLowerCase()).to.include(\"4:00\" || \"16:00\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"dateStr\", pm.collectionVariables.get(\"lastMonday\") + \" 09:00:00\")\r",
									"pm.collectionVariables.set(\"dateStr2\", pm.collectionVariables.get(\"lastMonday\") + \" 16:00:00\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"company\": \"{{studentID}}\",\r\n    \"timecard_id\": {{good_insert_timecard_id}},\r\n    \"start_time\": \"2022-11-17T06:00:00+0100\",\r\n    \"end_time\": \"2022-11-17T12:00:00+0100\",\r\n    \"emp_id\":{{good_insert_emp_id}}\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_path}}/timecard",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"timecard"
							]
						}
					},
					"response": []
				},
				{
					"name": "Timecard ERROR 7",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Successful Timecard Update, It contains the updated information\", function () {\r",
									"    pm.expect(pm.response.text().toLowerCase()).to.include(\"4:00\" || \"16:00\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"dateStr\", pm.collectionVariables.get(\"lastMonday\") + \" 09:00:00\")\r",
									"pm.collectionVariables.set(\"dateStr2\", pm.collectionVariables.get(\"lastMonday\") + \" 16:00:00\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"company\": \"{{studentID}}\",\r\n    \"timecard_id\": {{good_insert_timecard_id}},\r\n    \"start_time\": \"2022-11-17T06:00:00+0100\",\r\n    \"end_time\": \"2022-11-17T22:04:00+0100\",\r\n    \"emp_id\":{{good_insert_emp_id}}\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_path}}/timecard",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"timecard"
							]
						}
					},
					"response": []
				},
				{
					"name": "Timecard ERROR 6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Successful Timecard Update, It contains the updated information\", function () {\r",
									"    pm.expect(pm.response.text().toLowerCase()).to.include(\"4:00\" || \"16:00\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"dateStr\", pm.collectionVariables.get(\"lastMonday\") + \" 09:00:00\")\r",
									"pm.collectionVariables.set(\"dateStr2\", pm.collectionVariables.get(\"lastMonday\") + \" 16:00:00\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"company\": \"{{studentID}}\",\r\n    \"timecard_id\": {{good_insert_timecard_id}},\r\n    \"start_time\": \"2022-11-17T03:00:00+0100\",\r\n    \"end_time\": \"2022-11-17T11:00:00+0100\",\r\n    \"emp_id\":{{good_insert_emp_id}}\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_path}}/timecard",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"timecard"
							]
						}
					},
					"response": []
				},
				{
					"name": "Timecard ERROR 5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Successful Timecard Update, It contains the updated information\", function () {\r",
									"    pm.expect(pm.response.text().toLowerCase()).to.include(\"4:00\" || \"16:00\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"dateStr\", pm.collectionVariables.get(\"lastMonday\") + \" 09:00:00\")\r",
									"pm.collectionVariables.set(\"dateStr2\", pm.collectionVariables.get(\"lastMonday\") + \" 16:00:00\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"company\": \"{{studentID}}\",\r\n    \"timecard_id\": {{good_insert_timecard_id}},\r\n    \"start_time\": \"2022-11-07T06:00:00+0100\",\r\n    \"end_time\": \"2022-11-06T11:00:00+0100\",\r\n    \"emp_id\":{{good_insert_emp_id}}\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_path}}/timecard",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"timecard"
							]
						}
					},
					"response": []
				},
				{
					"name": "Timecard - ERROR 4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Successful Timecard Update, It contains the updated information\", function () {\r",
									"    pm.expect(pm.response.text().toLowerCase()).to.include(\"4:00\" || \"16:00\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"dateStr\", pm.collectionVariables.get(\"lastMonday\") + \" 09:00:00\")\r",
									"pm.collectionVariables.set(\"dateStr2\", pm.collectionVariables.get(\"lastMonday\") + \" 16:00:00\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"company\": \"{{studentID}}\",\r\n    \"timecard_id\": {{good_insert_timecard_id}},\r\n    \"start_time\": \"2022-11-05T06:00:00+0100\",\r\n    \"end_time\": \"2022-11-05T11:00:00+0100\",\r\n    \"emp_id\":{{good_insert_emp_id}}\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_path}}/timecard",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"timecard"
							]
						}
					},
					"response": []
				},
				{
					"name": "Timecard ERROR 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Successful Timecard Update, It contains the updated information\", function () {\r",
									"    pm.expect(pm.response.text().toLowerCase()).to.include(\"4:00\" || \"16:00\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"dateStr\", pm.collectionVariables.get(\"lastMonday\") + \" 09:00:00\")\r",
									"pm.collectionVariables.set(\"dateStr2\", pm.collectionVariables.get(\"lastMonday\") + \" 16:00:00\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"company\": \"{{studentID}}\",\r\n    \"timecard_id\": {{good_insert_timecard_id}},\r\n    \"start_time\": \"2021-11-17T06:00:00+0100\",\r\n    \"end_time\": \"2022-11-17T11:00:00+0100\",\r\n    \"emp_id\":{{good_insert_emp_id}}\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_path}}/timecard",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"timecard"
							]
						}
					},
					"response": []
				},
				{
					"name": "Timecard ERROR 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Successful Timecard Update, It contains the updated information\", function () {\r",
									"    pm.expect(pm.response.text().toLowerCase()).to.include(\"4:00\" || \"16:00\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"dateStr\", pm.collectionVariables.get(\"lastMonday\") + \" 09:00:00\")\r",
									"pm.collectionVariables.set(\"dateStr2\", pm.collectionVariables.get(\"lastMonday\") + \" 16:00:00\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"company\": \"{{studentID}}\",\r\n    \"timecard_id\": {{good_insert_timecard_id}},\r\n    \"start_time\": \"2022-11-17T06:00:00+0100\",\r\n    \"end_time\": \"2022-11-16T11:00:00+0100\",\r\n    \"emp_id\":{{good_insert_emp_id}}\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_path}}/timecard",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"timecard"
							]
						}
					},
					"response": []
				},
				{
					"name": "Timecard - ERROR 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Successful Timecard Update, It contains the updated information\", function () {\r",
									"    pm.expect(pm.response.text().toLowerCase()).to.include(\"4:00\" || \"16:00\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"dateStr\", pm.collectionVariables.get(\"lastMonday\") + \" 09:00:00\")\r",
									"pm.collectionVariables.set(\"dateStr2\", pm.collectionVariables.get(\"lastMonday\") + \" 16:00:00\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"company\": \"{{studentID}}\",\r\n    \"timecard_id\": {{good_insert_timecard_id}},\r\n    \"start_time\": \"2022-11-17T06:00:00+0100\",\r\n    \"end_time\": \"2022-11-17T11:00:00+0100\",\r\n    \"emp_id\":3333\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_path}}/timecard",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"timecard"
							]
						}
					},
					"response": []
				},
				{
					"name": "Timecard - ERROR 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Successful Timecard Update, It contains the updated information\", function () {\r",
									"    pm.expect(pm.response.text().toLowerCase()).to.include(\"4:00\" || \"16:00\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"dateStr\", pm.collectionVariables.get(\"lastMonday\") + \" 09:00:00\")\r",
									"pm.collectionVariables.set(\"dateStr2\", pm.collectionVariables.get(\"lastMonday\") + \" 16:00:00\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"company\": \"{{studentID}}\",\r\n    \"timecard_id\": 3333,\r\n    \"start_time\": \"2022-11-17T06:00:00+0100\",\r\n    \"end_time\": \"2022-11-17T11:00:00+0100\",\r\n    \"emp_id\":{{good_insert_emp_id}}\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_path}}/timecard",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"timecard"
							]
						}
					},
					"response": []
				},
				{
					"name": "Timecard",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Successful Delete\", function () {\r",
									"    pm.expect(pm.response.text().toLowerCase()).to.include(\"success\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_path}}/timecard?company={{studentID}}&timecard_id={{good_delete_timecard_id}}",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"timecard"
							],
							"query": [
								{
									"key": "company",
									"value": "{{studentID}}"
								},
								{
									"key": "timecard_id",
									"value": "{{good_delete_timecard_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Timecard - ERROR 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Successful Delete\", function () {\r",
									"    pm.expect(pm.response.text().toLowerCase()).to.include(\"success\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_path}}/timecard?company={{studentID}}&timecard_id=9999",
							"host": [
								"{{base_path}}"
							],
							"path": [
								"timecard"
							],
							"query": [
								{
									"key": "company",
									"value": "{{studentID}}"
								},
								{
									"key": "timecard_id",
									"value": "9999"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"let a = pm.collectionVariables.get(\"server\")",
					"let b = pm.collectionVariables.get(\"war_name\")",
					"let c = pm.collectionVariables.get(\"base\")",
					"",
					"let d = `${a}/${b}/${c}`",
					"pm.collectionVariables.set(\"base_path\", \"\")",
					"pm.collectionVariables.set(\"base_path\", d)",
					"console.log(pm.collectionVariables)",
					"",
					"",
					"function formatDate(date) {",
					"    var d = new Date(date),",
					"        month = '' + (d.getMonth() + 1),",
					"        day = '' + d.getDate(),",
					"        year = d.getFullYear();",
					"",
					"    if (month.length < 2) ",
					"        month = '0' + month;",
					"    if (day.length < 2) ",
					"        day = '0' + day;",
					"",
					"    return [year, month, day].join('-');",
					"}",
					"",
					"var now = new Date();",
					"var today = new Date(now.getFullYear(), now.getMonth(), now.getDate());",
					"var lastSunday = new Date(today.setDate(today.getDate()-today.getDay()));",
					"pm.collectionVariables.set(\"lastSunday\",formatDate(lastSunday))",
					" ",
					"var prevMonday = new Date();",
					"prevMonday.setDate(prevMonday.getDate() - (prevMonday.getDay() + 6) % 7);",
					"pm.collectionVariables.set(\"lastMonday\", formatDate(prevMonday)); "
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "server",
			"value": "localhost:8080"
		},
		{
			"key": "base",
			"value": "webresources/CompanyServices"
		},
		{
			"key": "studentID",
			"value": "dk4368"
		},
		{
			"key": "good_insert_dept_id",
			"value": "1"
		},
		{
			"key": "good_delete_dept_id",
			"value": "5"
		},
		{
			"key": "war_name",
			"value": "Project2"
		},
		{
			"key": "base_path",
			"value": "localhost:8080/LastNameFirstNameP2/webresources/CompanyServices"
		},
		{
			"key": "lastSunday",
			"value": ""
		},
		{
			"key": "lastMonday",
			"value": ""
		},
		{
			"key": "good_insert_emp_id",
			"value": "5"
		},
		{
			"key": "dateStr",
			"value": "2021-11-08 08:00:00"
		},
		{
			"key": "dateStr2",
			"value": "2021-11-08 17:00:00"
		},
		{
			"key": "good_insert_timecard_id",
			"value": "1"
		},
		{
			"key": "good_insert_manager_id",
			"value": "11"
		},
		{
			"key": "good_delete_emp_id",
			"value": "13"
		},
		{
			"key": "good_delete_timecard_id",
			"value": "46"
		}
	]
}